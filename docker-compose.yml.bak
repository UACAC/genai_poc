services:
  postgres:
    image: postgres:17
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ai_network

  chromadb:
    build:
      context: ./src/chromadb
      dockerfile: Dockerfile.chromadb
    container_name: chromadb
    ports:
      - "8020:8020"
    environment:
      - CHROMADB_PERSIST_DIRECTORY=/app/chroma_db_data
    volumes:
      - chromadata:/app/chroma_db_data
    networks:
      - ai_network

  ollama:
    build:
      context: .
      dockerfile: Dockerfile.ollama
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    networks:
      - ai_network

  fastapi:
    build:
      context: ./src/fastapi
      dockerfile: Dockerfile.fastapi
    container_name: fastapi
    ports:
      - "9020:9020"
    env_file:
      - .env
    depends_on:
      - postgres
      - chromadb
      - ollama
    volumes:
      - ./src/fastapi/pyproject.toml:/app/pyproject.toml
      - ./src/fastapi/poetry.lock:/app/poetry.lock
      - huggingface_cache:/app/huggingface_cache
    networks:
      - ai_network

  streamlit:
    build:
      context: ./src/streamlit
      dockerfile: Dockerfile.streamlit
    container_name: streamlit
    ports:
      - "8501:8501"
    env_file:
      - .env
    volumes:
      - ./src/streamlit/pyproject.toml:/app/pyproject.toml
      - ./src/streamlit/poetry.lock:/app/poetry.lock
    networks:
      - ai_network

networks:
  ai_network:
    driver: bridge

volumes:
  pgdata:
  chromadata:
  ollama_models:
  huggingface_cache:
